{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","auth","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","storage","attachmentUrl","toggleEditing","updateDoc","src","width","height","alt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","user","uid","uuidv4","response","ref","createdAt","Date","now","creatorId","firestore","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","console","log","nweets","setNweets","useEffect","snapshot","nweetArray","docs","map","data","Profile","refreshUser","displayName","newDisplayName","setNewDisplayName","history","useHistory","getMyNweets","query","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","flag","setUserObj","onAuthStateChanged","Boolean","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8f6eea8.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\n\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\nexport default firebase.initializeApp(firebaseConfig);\nexport const firebaseInstance = firebase;\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","import React, { useState } from 'react';\nimport * as auth from 'firebase/auth';\nimport { authService } from 'fbase';\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    // eslint-disable-next-line\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {\n            target: {\n                name, value\n            }\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if(name === \"password\") {\n            setPassword(value);\n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            if (newAccount) {\n                await auth.createUserWithEmailAndPassword(authService, email, password)\n            } else {\n                await auth.signInWithEmailAndPassword(authService, email, password)\n            }\n            \n        } catch (error) {\n            setError(error.message);\n        }\n        \n    }\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    return (<>\n        <form onSubmit={onSubmit}>\n            <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} />\n            <input name=\"password\" type=\"password\" placeholder=\"password\" required value={password} onChange={onChange} />\n            <input type=\"submit\" placeholder=\"Log In\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n            {error}\n        </form>\n        <span onClick={toggleAccount}>{newAccount ? \"Sign in\" : \"Create Account\"}</span>\n    </>);\n};\n\nexport default AuthForm;","import React from 'react';\nimport { authService } from 'fbase';\nimport * as auth from 'firebase/auth';\nimport AuthForm from 'components/AuthForm';\n\nconst Auth = () => {\n    const onSocialClick = async(event) => {\n        const {target: {name}} = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new auth.GithubAuthProvider();\n        }\n        await auth.signInWithPopup(authService, provider)\n    };\n\n    return (<div>\n        <AuthForm />\n        <div>\n            <button name=\"google\" onClick={onSocialClick}>Continuew with Google</button>\n            <button name=\"github\" onClick={onSocialClick}>Continuew with Github</button>\n        </div>\n    </div>\n    )\n};\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport { React, useState } from \"react\";\nimport * as storage from \"firebase/storage\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    // eslint-disable-next-line\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async (event) => {\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n        if (ok) {\n            await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\n            await storage.deleteObject(storage.ref(storageService, nweetObj.attachmentUrl));\n        }\n    }\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onChange = (event) => {\n        const { target: { value } } = event;\n        setNewNweet(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\n            text: newNweet,\n        });\n        setEditing(false);\n    };\n\n    return (\n        <div>\n            {\n                editing ? (\n                    isOwner && <>\n                        <form onSubmit={onSubmit}>\n                            <input type=\"text\" value={newNweet} required placeholder=\"Edit you nweet\" onChange={onChange}></input>\n                            <input type=\"submit\" value=\"Update Nweet\"></input>\n                        </form>\n                        <button onClick={toggleEditing}>Cancel</button>\n                    </>\n                ) : (\n                    <>\n                        <h4>{nweetObj.text}</h4>\n                        {nweetObj.attachmentUrl && (\n                            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" alt=\"\"></img>\n                        )}\n                        {\n                            isOwner && (\n                                <>\n                                    <button onClick={onDeleteClick}>Delete</button>\n                                    <button onClick={toggleEditing}>Edit</button>\n                                </>\n                            )\n                        }\n\n                    </>)\n            }\n        </div>\n    );\n};\n\nexport default Nweet;","import React, { useState } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport * as firestore from \"firebase/firestore\";\nimport * as storage from \"firebase/storage\";\nimport {v4 as uuidv4} from 'uuid';\n\nconst NweetFactory = ({userObj}) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storage.ref(storageService, `${userObj.user.uid}/${uuidv4()}`);\n            const response = await storage.uploadString(attachmentRef, attachment, \"data_url\");\n            attachmentUrl = await storage.getDownloadURL(response.ref);\n        }\n        \n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.user.uid,\n            attachmentUrl,\n        };\n        await firestore.addDoc(firestore.collection(dbService, \"nweets\"), nweetObj);\n        setNweet(\"\");\n        setAttachment(null);\n    };\n    const onChange = (event) => {\n        const { target: { value } } = event;\n        setNweet(value);\n    }\n\n    const onFileChange = (event) => {\n        const { target: { files }, } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const { currentTarget: { result, }, } = finishedEvent;\n            setAttachment(result);\n        }\n        reader.readAsDataURL(theFile);\n    };\n\n    const onClearAttachment = () => {\n        setAttachment(null);\n    };\n\n    return (\n        <form onSubmit={onSubmit}>\n            <input type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} onChange={onChange} value={nweet}></input>\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n            <input type=\"submit\" value=\"Nweet\"></input>\n            {attachment && (\n                <div>\n                    <img src={attachment} width=\"50px\" height=\"50px\" alt=\"\"></img>\n                    <button onClick={onClearAttachment}>Clear</button>\n                </div>\n            )\n            }\n        </form>\n    );\n};\n\nexport default NweetFactory;","import React, { useEffect, useState } from 'react';\nimport { dbService } from 'fbase';\nimport * as firestore from \"firebase/firestore\";\nimport Nweet from 'components/Nweet';\nimport NweetFactory from 'components/NweetFactory';\n\nconst Home = ({ userObj }) => {\n    console.log(userObj);\n    \n    const [nweets, setNweets] = useState([]);\n    \n    useEffect(() => {\n        firestore.onSnapshot(firestore.collection(dbService, \"nweets\"), (snapshot) => {\n            const nweetArray = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data(), }))\n            setNweets(nweetArray);\n        });\n    }, [])\n    \n    return (<div>\n        <NweetFactory userObj={userObj} />\n        <div>\n            {nweets.map((nweet) => {\n                return (\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.user.uid}></Nweet>\n                );\n            })}\n        </div>\n    </div>);\n};\nexport default Home;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { authService, dbService } from 'fbase';\nimport * as firestore from \"firebase/firestore\";\nimport {updateProfile} from 'firebase/auth';\n\nconst Profile = ( { userObj, refreshUser } ) => {\n    //eslint-disable-next-line\n    const [newDisplayName, setNewDisplayName] = useState(userObj.user.displayName);\n    const history = useHistory();\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n    const getMyNweets = async () => {\n        const query = firestore.query(firestore.collection(dbService, \"nweets\"), firestore.where(\"creatorId\", \"==\", userObj.user.uid), firestore.orderBy(\"createdAt\"));\n        const nweets = await firestore.getDocs(query);\n        console.log(nweets.docs.map((doc) => doc.data() ))\n    };\n\n    useEffect(() => {\n        getMyNweets();\n        // eslint-disable-next-line\n    }, []);\n\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.user.displayName !== newDisplayName) {\n            await updateProfile(userObj.user, {\n                displayName: newDisplayName, \n                // photoURL: \"https://example.com/jane-q-user/profile.jpg\"\n              });\n            refreshUser();\n        }\n    };\n\n    return (\n        <>\n        <form onSubmit={onSubmit}>\n            <input type=\"text\" placeholder=\"username\" onChange={onChange} value={newDisplayName}></input>\n            <input type=\"submit\" value=\"Update profile\"></input>\n        </form>\n            <button onClick={onLogOutClick}>Log out</button>\n        </>\n    );\n};\n\nexport default Profile;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({userObj}) => {\n    return (<nav>\n        <ul>\n            <li>\n                <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n                <Link to=\"/profile\">{userObj.user.displayName}의 Profile</Link>\n            </li>\n        </ul>\n    </nav>);\n}\n\nexport default Navigation;","import { React } from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile';\nimport Navigation from './Navigation';\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj}/>}\n            <Switch>\n                {isLoggedIn ? (\n                    <>\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} refreshUser={refreshUser}/>\n                        </Route>\n                        <Redirect from=\"*\" to=\"/\"></Redirect>\n                    </>\n                ) : (\n                    <>\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                        <Redirect from=\"*\" to=\"/\"></Redirect>\n                    </>\n                )}\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;","\nimport AppRouter from \"components/Router\";\nimport { authService } from 'fbase';\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  // eslint-disable-next-line\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState({flag: false});\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj((prev) => ({\n          user: user,\n          flag: !prev.flag,\n        }));\n      } else {\n        setUserObj((prev) => ({\n          flag: !prev.flag,\n        }));\n      }\n      setInit(true);\n    });\n  }, []);\n  \n  const refreshUser = () => {\n    const user = authService.currentUser\n    setUserObj((prev) => ({\n      user: user,\n      flag: !prev.flag,\n    }));\n  };\n\n  return (\n    <>\n      { init ? <AppRouter isLoggedIn={Boolean(userObj.user)} userObj={userObj} refreshUser={refreshUser}/>  : \"Initializing...\" }\n      <footer>&copy; {new Date().getFullYear()}</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport firebase from 'fbase';\n\nconsole.log(firebase);\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}